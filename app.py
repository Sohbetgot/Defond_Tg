import telebot
from telebot import types
import time
import threading

TOKEN = '7660064921:AAHAl0-wL7q5eGgHFlyPCMgW6ow1u4cS1f4'  # Bot tokeni≈àizi ≈üu √Ωere go√Ωu≈à
bot = telebot.TeleBot(TOKEN)

# Bot sazlamalar
sponsor_channels = ['@DM_SERVERS', '@DM_404CHAT']
vpn_codes = []
used_codes = []
admins = []
admin_keyword = "admin_gir"
custom_menu = "üëã Salam {username}! Ho≈ü geldi≈àiz."
spam_protection = True
last_message_time = {}
auto_posts = []
auto_post_interval = 3600  # Default 1 sagat

# Awto poster funksi√Ωasy
def auto_poster():
    while True:
        if auto_posts:
            for post in auto_posts:
                print(f"[BOT] Awto post: {post}")
        time.sleep(auto_post_interval)

threading.Thread(target=auto_poster, daemon=True).start()

# Abuna barlag
@bot.message_handler(commands=['start'])
def start_handler(message):
    if not check_subscription(message.chat.id):
        send_subscription_menu(message.chat.id)
    else:
        username = message.from_user.first_name
        bot.send_message(message.chat.id, custom_menu.format(username=username))
        bot.send_message(message.chat.id, "\u2705 Agzalygy≈àyz barlandy! Kody≈àyz: \n`vpn-kod-example`", parse_mode='Markdown')

# Abuna barlag funksiyasy
def check_subscription(user_id):
    for channel in sponsor_channels:
        try:
            member = bot.get_chat_member(channel, user_id)
            if member.status not in ['member', 'creator', 'administrator']:
                return False
        except:
            return False
    return True

def send_subscription_menu(user_id):
    markup = types.InlineKeyboardMarkup()
    for ch in sponsor_channels:
        btn = types.InlineKeyboardButton(text=ch.replace('@', ''), url=f'https://t.me/{ch[1:]}')
        markup.add(btn)
    markup.add(types.InlineKeyboardButton("‚úÖ Agza Boldum", callback_data="check_sub"))
    bot.send_message(user_id, "Botdan pe√Ωdalanmak √º√ßin a≈üakdaky kanallara agza bolu≈à:", reply_markup=markup)

@bot.callback_query_handler(func=lambda call: call.data == "check_sub")
def handle_check_sub(call):
    if check_subscription(call.message.chat.id):
        username = call.from_user.first_name
        bot.send_message(call.message.chat.id, custom_menu.format(username=username))
        bot.send_message(call.message.chat.id, "\u2705 Agzalygy≈àyz barlandy! Kody≈àyz: \n`vpn-kod-example`", parse_mode='Markdown')
    else:
        bot.answer_callback_query(call.id, "Ilki bilen √§hli kanallara agza bolu≈à!", show_alert=True)

# Admin panel komanda arkaly a√ßyl√Ωar
@bot.message_handler(commands=['admin'])
def admin_command(message):
    bot.send_message(message.chat.id, "A√ßar s√∂zi girizi≈à:")
    bot.register_next_step_handler(message, verify_admin)

def verify_admin(message):
    if message.text == admin_keyword:
        bot.send_message(message.chat.id, admin_commands, parse_mode='Markdown')
        if message.chat.id not in admins:
            admins.append(message.chat.id)
    else:
        bot.send_message(message.chat.id, "N√§dogry a√ßar s√∂zi.")

admin_commands = (
    "üõ† *Admin Panel*\n\n"
    "1. Post go≈ümak: 'Post go≈ü'\n"
    "2. Postlary g√∂rmek: 'Postlary g√∂rkez'\n"
    "3. Postlary √∂√ß√ºrmek: 'Postlary arassala'\n"
    "4. Aralyk (sekundda): 'Aralyk <sekund>'\n"
    "5. VPN kod go≈ümak: 'VPN go≈ü <kod>'\n"
    "6. VPN kodlary g√∂rmek: 'VPN g√∂r'\n"
    "7. VPN kodlary arassala: 'VPN arassala'\n"
    "8. Ulanylan kodlar: 'Ulanylan kodlar'\n"
    "9. Bildiri≈ü ugratmak: 'Bildiri≈ü <habar>'\n"
    "10. Admin go≈ümak: 'Admin go≈ü <id>'\n"
    "11. Admin √∂√ß√ºrmek: 'Admin √∂√ß√ºr <id>'\n"
    "12. Admin sanawy: 'Adminler'\n"
    "13. A√ßar s√∂z √º√Ωtgetmek: 'A√ßar √º√Ωtget <t√§ze_s√∂z>'\n"
    "14. Spamlardan goragy a√ß/√Ωap: 'Spam a√ß' / 'Spam √Ωap'\n"
    "15. Bot sazlamalary: 'Sazlama √º√Ωtget <ad>=<gymmat>'\n"
)

# Admin komandalar
@bot.message_handler(func=lambda m: m.chat.id in admins)
def handle_admin(message):
    text = message.text
    if text.startswith('Post go≈ü'):
        post = text.replace('Post go≈ü', '').strip()
        if post:
            auto_posts.append(post)
            bot.reply_to(message, "Post go≈üuldy")
    elif text == 'Postlary g√∂rkez':
        bot.reply_to(message, '\n'.join(auto_posts) or "Post √Ωok")
    elif text == 'Postlary arassala':
        auto_posts.clear()
        bot.reply_to(message, "Postlar arassalandy")
    elif text.startswith('Aralyk'):
        try:
            global auto_post_interval
            auto_post_interval = int(text.split()[1])
            bot.reply_to(message, f"Aralyk {auto_post_interval} sekunda go√Ωuldy")
        except:
            bot.reply_to(message, "Aralyk n√§dogry formatda")
    elif text.startswith('VPN go≈ü'):
        kod = text.replace('VPN go≈ü', '').strip()
        vpn_codes.append(kod)
        bot.reply_to(message, "VPN kod go≈üuldy")
    elif text == 'VPN g√∂r':
        bot.reply_to(message, '\n'.join(vpn_codes) or "Kod √Ωok")
    elif text == 'VPN arassala':
        vpn_codes.clear()
        bot.reply_to(message, "VPN kodlar arassalandy")
    elif text == 'Ulanylan kodlar':
        bot.reply_to(message, '\n'.join(used_codes) or "Ulanylan kod √Ωok")
    elif text.startswith('Bildiri≈ü'):
        msg = text.replace('Bildiri≈ü', '').strip()
        for admin_id in admins:
            bot.send_message(admin_id, f"üì¢ Bildiri≈ü: {msg}")
    elif text.startswith('Admin go≈ü'):
        try:
            uid = int(text.split()[2])
            admins.append(uid)
            bot.reply_to(message, "Admin go≈üuldy")
        except:
            bot.reply_to(message, "ID n√§dogry")
    elif text.startswith('Admin √∂√ß√ºr'):
        try:
            uid = int(text.split()[2])
            admins.remove(uid)
            bot.reply_to(message, "Admin √∂√ß√ºrildi")
        except:
            bot.reply_to(message, "ID √Ωok √Ωa n√§dogry")
    elif text == 'Adminler':
        bot.reply_to(message, '\n'.join(map(str, admins)))
    elif text.startswith('A√ßar √º√Ωtget'):
        global admin_keyword
        admin_keyword = text.split(' ', 2)[2]
        bot.reply_to(message, "A√ßar √º√Ωtgedildi")
    elif text == 'Spam a√ß':
        global spam_protection
        spam_protection = True
        bot.reply_to(message, "Spam goragy a√ßyldy")
    elif text == 'Spam √Ωap':
        spam_protection = False
        bot.reply_to(message, "Spam goragy √Ωapyldy")
    elif text.startswith('Sazlama √º√Ωtget'):
        try:
            setting = text.split(' ', 2)[2]
            key, value = setting.split('=')
            if key.strip() == 'menu':
                global custom_menu
                custom_menu = value.strip()
                bot.reply_to(message, "Men√Ωu sazlamasy √º√Ωtgedildi")
        except:
            bot.reply_to(message, "√ùal≈ày≈ü format")

# Bot ba≈üla√Ωar
print("[BOT] I≈üle√Ω√§r...")
bot.infinity_polling()
